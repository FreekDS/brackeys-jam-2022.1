[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 outline_color : hint_color = vec4(1.0);
uniform float thickness : hint_range(0, 10) = 0.2;

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * thickness;
	
	float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	
	if (color.a == 0.0) {
		COLOR = mix(color, outline_color, outline - color.a);
	}
	else {
		COLOR = color;
	}
}"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/outline_color = Color( 0.376471, 0.898039, 0.188235, 1 )
shader_param/thickness = 0.0
